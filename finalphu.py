# -*- coding: utf-8 -*-
"""phu_vac_access_data_final.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uAugwS6MTH7og9SHQ4JQ7y39K4x8bNLW
"""

import requests 
from datetime import datetime
import pandas as pd
import re
import numpy as np
import json
from bs4 import BeautifulSoup as bs 
r = requests.get("https://www.health.gov.on.ca/en/common/system/services/phu/locations.aspx#37")

webpage = bs(r.content)
#print(webpage.prettify())
today_date = datetime.today().strftime('%Y-%m-%d')

table = webpage.find("table", attrs={"span": "styled"})

pat = re.compile("\n\r ")

table_rows = table.find_all("tr")
url = "https://www.health.gov.on.ca"
cities = []
phu_link = []
phu_name = []
for tr in table_rows:
    td = tr.find_all('td')
    row = [tr for tr in td]
    city= row[1].get_text()
    temp = city.split('  ')
    print(temp)
    temp = [el.replace('\n', '') for el in temp if el != '']
    temp = [el.replace('\r', '') for el in temp]
    temp = [el.replace('\xa0', '') for el in temp]
    for city in temp:
      cities.append(city)
    link = row[2].find_all('a')
    nam = row[2].get_text()
    name = nam.split('\n')
    for nam in name:
      nam= re.sub(r'\s+', ' ', nam)
      phu_name.append(nam)
    link = [l['href'] for l in link]
    for l in link:
      links = url + l
      phu_link.append(links)
print(phu_link)

cities.remove('Fergus')

df = pd.DataFrame({'City':cities, 'Website_info': phu_link, 'PHU_Name': phu_name})

df.drop_duplicates(inplace=True)

df.reset_index(drop=True, inplace=True)

df.drop([6], axis=0, inplace=True)

df.reset_index(drop=True, inplace=True)

"""### Loading data from different PHU and cities into Pandas dataframe
#### Separate dataset for each PHU

#### Dataset 1
"""

algoma = pd.read_excel('../PHU_data/algoma_phu_data.xlsx', header=None)
algoma.dropna(axis=1, how='all',inplace=True)
algoma.columns = ['City', 'Public_health_unit']

"""#### Dataset 2"""

brant = pd.read_excel('../PHU_data/brant_phu_data.xlsx', header=None)
brant.dropna(axis=1, how='all',inplace=True)
brant.columns = ['City', 'Public_health_unit']

"""#### Dataset 3"""

chatham_kent = pd.read_excel('../PHU_data/chatham-kent_phu_data.xlsx', header=None)
chatham_kent.dropna(axis=1, how='all',inplace=True)
chatham_kent.columns = ['City', 'Public_health_unit']

"""#### Dataset 4"""

Durham = pd.read_excel('../PHU_data/Durham_phu_data.xlsx', header=None)
Durham.dropna(axis=1, how='all',inplace=True)
Durham.columns = ['City', 'Public_health_unit']

"""#### Dataset 5"""

Eastern = pd.read_excel('../PHU_data/Eastern_phu_data.xlsx', header=None)
Eastern.dropna(axis=1, how='all',inplace=True)
Eastern.columns = ['City', 'Public_health_unit']

"""#### Dataset 6"""

Grey_bruce = pd.read_excel('../PHU_data/Grey-bruce_phu_data.xlsx', header=None)
Grey_bruce.dropna(axis=1, how='all',inplace=True)
Grey_bruce.columns = ['City', 'Public_health_unit']

"""#### Dataset 7"""

Haldimand_Norfolk = pd.read_excel('../PHU_data/Haldimand-Norfolk_phu_data.xlsx', header=None)
Haldimand_Norfolk.dropna(axis=1, how='all',inplace=True)
Haldimand_Norfolk.columns = ['City', 'Public_health_unit']

"""#### Dataset 8"""

Halton = pd.read_excel('../PHU_data/Halton_phu_data.xlsx', header=None)
Halton.dropna(axis=1, how='all',inplace=True)
Halton.columns = ['City', 'Public_health_unit']

"""#### Dataset 9"""

Hamilton = pd.read_excel('../PHU_data/Hamilton_phu_data.xlsx', header=None)
Hamilton.dropna(axis=1, how='all',inplace=True)
Hamilton.columns = ['City', 'Public_health_unit']

"""#### Dataset 10"""

Hastings = pd.read_excel('../PHU_data/Hastings_phu_data.xlsx', header=None)
Hastings.dropna(axis=1, how='all',inplace=True)
Hastings.columns = ['City', 'Public_health_unit']

"""#### Dataset 11"""

HKPR = pd.read_excel('../PHU_data/HKPR_phu_data.xlsx', header=None)
HKPR.dropna(axis=1, how='all',inplace=True)
HKPR.columns = ['City', 'Public_health_unit']

"""#### Dataset 12"""

Huron_perth = pd.read_excel('../PHU_data/Huron-Perth_phu_data.xlsx', header=None)
Huron_perth.dropna(axis=1, how='all',inplace=True)
Huron_perth.columns = ['City', 'Public_health_unit']

"""#### Dataset 13"""

Kingston = pd.read_excel('../PHU_data/Kingston_phu_data.xlsx', header=None)
Kingston.dropna(axis=1, how='all',inplace=True)
Kingston.columns = ['City', 'Public_health_unit']

"""#### Dataset 14"""

Lambton = pd.read_excel('../PHU_data/Lambton_phu_data.xlsx', header=None)
Lambton.dropna(axis=1, how='all',inplace=True)
Lambton.columns = ['City', 'Public_health_unit']

"""#### Dataset 15"""

Leeds = pd.read_excel('../PHU_data/Leeds_phu_data.xlsx', header=None)
Leeds.dropna(axis=1, how='all',inplace=True)
Leeds.columns = ['City', 'Public_health_unit']

"""#### Dataset 16"""

Middllesex = pd.read_excel('../PHU_data/Middlesex_phu_data.xlsx', header=None)
Middllesex.dropna(axis=1, how='all',inplace=True)
Middllesex.columns = ['City', 'Public_health_unit']

"""#### Dataset 17"""

Niagara = pd.read_excel('../PHU_data/Niagara_phu_data.xlsx', header=None)
Niagara.dropna(axis=1, how='all',inplace=True)
Niagara.columns = ['City', 'Public_health_unit']

"""#### Dataset 18"""

North_Bay_Parry_Sound = pd.read_excel('../PHU_data/North_Bay_Parry_Sound_phu_data.xlsx', header=None)
North_Bay_Parry_Sound.dropna(axis=1, how='all',inplace=True)
North_Bay_Parry_Sound.columns = ['City', 'Public_health_unit']

"""#### Dataset 19"""

Northwestern = pd.read_excel('../PHU_data/Northwestern_phu_data.xlsx', header=None)
Northwestern.dropna(axis=1, how='all',inplace=True)
Northwestern.columns = ['City', 'Public_health_unit']

"""#### Dataset 20"""

Ottawa = pd.read_excel('../PHU_data/Ottawa_phu_data.xlsx', header=None)
Ottawa.dropna(axis=1, how='all',inplace=True)
Ottawa.columns = ['City', 'Public_health_unit']

"""#### Dataset 21"""

Peel = pd.read_excel('../PHU_data/Peel_phu_data.xlsx', header=None)
Peel.dropna(axis=1, how='all',inplace=True)
Peel.columns = ['City', 'Public_health_unit']

"""#### Dataset 22"""

Peterborough = pd.read_excel('../PHU_data/Peterborough_phu_data.xlsx', header=None)
Peterborough.dropna(axis=1, how='all',inplace=True)
Peterborough.columns = ['City', 'Public_health_unit']

"""#### Dataset 23"""

Porcupine = pd.read_excel('../PHU_data/Porcupine_phu_data.xlsx', header=None)
Porcupine.dropna(axis=1, how='all',inplace=True)
Porcupine.columns = ['City', 'Public_health_unit']

"""#### Dataset 24"""

Renfrew = pd.read_excel('../PHU_data/Renfrew_phu_data.xlsx', header=None)
Renfrew.dropna(axis=1, how='all',inplace=True)
Renfrew.columns = ['City', 'Public_health_unit']

"""#### Dataset 25"""

Simcoe_muskoka = pd.read_excel('../PHU_data/Simcoe_muskoka_phu_data.xlsx', header=None)
Simcoe_muskoka.dropna(axis=1, how='all',inplace=True)
Simcoe_muskoka.columns = ['City', 'Public_health_unit']

"""#### Dataset 26"""

Southwestern = pd.read_excel('../PHU_data/Southwestern_phu_data.xlsx', header=None)
Southwestern.dropna(axis=1, how='all',inplace=True)
Southwestern.columns = ['City', 'Public_health_unit']

"""#### Dataset 27"""

Sudbury = pd.read_excel('../PHU_data/Sudbury_phu_data.xlsx', header=None)
Sudbury.dropna(axis=1, how='all',inplace=True)
Sudbury.columns = ['City', 'Public_health_unit']

"""#### Dataset 28"""

Thunder_Bay = pd.read_excel('../PHU_data/Thunder_Bay_phu_data.xlsx', header=None)
Thunder_Bay.dropna(axis=1, how='all',inplace=True)
Thunder_Bay.columns = ['City', 'Public_health_unit']

"""#### Dataset 29"""

Timiskaming = pd.read_excel('../PHU_data/Timiskaming_phu_data.xlsx', header=None)
Timiskaming.dropna(axis=1, how='all',inplace=True)
Timiskaming.columns = ['City', 'Public_health_unit']

"""#### Dataset 30"""

Toronto = pd.read_excel('../PHU_data/Toronto_phu_data.xlsx', header=None)
Toronto.dropna(axis=1, how='all',inplace=True)
Toronto.columns = ['City', 'Public_health_unit']

"""#### Dataset 31"""

Waterloo = pd.read_excel('../PHU_data/Waterloo_phu_data.xlsx', header=None)
Waterloo.dropna(axis=1, how='all',inplace=True)
Waterloo.columns = ['City', 'Public_health_unit']

"""#### Dataset 32"""

Wellington_dufferin = pd.read_excel('../PHU_data/Wellington_dufferin_phu_data.xlsx', header=None)
Wellington_dufferin.dropna(axis=1, how='all',inplace=True)
Wellington_dufferin.columns = ['City', 'Public_health_unit']

"""#### Dataset 33"""

Windsor_essex = pd.read_excel('../PHU_data/Windsor_essex_phu_data.xlsx', header=None)
Windsor_essex.dropna(axis=1, how='all',inplace=True)
Windsor_essex.columns = ['City', 'Public_health_unit']

"""#### Dataset 34"""

York = pd.read_excel('../PHU_data/York_phu_data.xlsx', header=None)
York.dropna(axis=1, how='all',inplace=True)
York.columns = ['City', 'Public_health_unit']

final_phu = pd.concat([algoma, brant, chatham_kent, Durham, Eastern, Grey_bruce, Haldimand_Norfolk, Halton, Hamilton, Hastings, HKPR,Huron_perth, Kingston, Lambton, Leeds, Middllesex,Niagara, North_Bay_Parry_Sound, Northwestern, Ottawa,Peel, Peterborough, Porcupine, Renfrew, Simcoe_muskoka, Southwestern, Sudbury, Thunder_Bay, Timiskaming, Toronto, Waterloo, Wellington_dufferin, Windsor_essex,York], axis=0)

final_phu['Public_health_unit'] = final_phu['Public_health_unit'].str.lower()
final_phu['City'] = final_phu['City'].str.lower()
final_phu['Public_health_unit'] = np.where(final_phu['Public_health_unit']=='hkpr', 'haliburton, kawartha, pine ridge district health unit', final_phu['Public_health_unit'])
final_phu['Public_health_unit'] = np.where(final_phu['Public_health_unit']=='huron-perth', 'huron perth', final_phu['Public_health_unit'])
final_phu['Public_health_unit'] = np.where(final_phu['Public_health_unit']=='grey-bruce', 'grey bruce', final_phu['Public_health_unit'])


col = list(df['PHU_Name'].unique())
col = [x.lower() for x in col]

#col

lis= list(final_phu.columns)

#lis

ind = lis.index('Public_health_unit')
#ind

temp_df = df[['Website_info', 'PHU_Name']]

temp_df.drop_duplicates(inplace=True)

temp_df['PHU_Name'] = temp_df['PHU_Name'].str.lower()


temp_df.reset_index(drop=True, inplace=True)
pd.set_option('max_colwidth', 100)


final_phu['Website_info'] = 'website'

for i in range(len(final_phu)):
  for cols in col:
    if final_phu.iloc[i,ind].lower() in cols:
      final_phu.iloc[i,ind] = cols
      val = final_phu.iloc[i,ind]
      final_phu.iloc[i,2] = temp_df.loc[temp_df['PHU_Name'] == val, 'Website_info'].values[0]

df = df[['City', 'PHU_Name', 'Website_info']]

df.columns = ['City', 'Public_health_unit', 'Website_info']

final_phu = pd.concat([final_phu, df],axis=0)

final_phu['City'] = final_phu['City'].str.lower()
final_phu['Public_health_unit'] = final_phu['Public_health_unit'].str.lower()

final_phu.drop_duplicates(inplace=True)
final_phu= final_phu.loc[final_phu['Website_info']!='website', :]

"""###**COVID Cases Data:**"""

covid_data= pd.DataFrame(columns=['Date', 'Public_health_unit', 'Active_Cases', 'Resolved_cases', 'Deaths'])

import urllib.request
url = f"""https://data.ontario.ca/api/3/action/datastore_search?q={today_date}&resource_id=d1bfe1ad-6575-4352-8302-09ca81f7ddfc""" 
fileobj = urllib.request.urlopen(url)
data = fileobj.read()
dat = data.decode()
dat_f= json.loads(dat)
Active_cases = []
Deaths = []
Public_health_unit = []
Resolved_cases = []
Date = []
if dat_f['result']['records'] != []:
  for d in dat_f['result']['records']:
    Active_cases.append(d['ACTIVE_CASES'])
    Deaths.append(d['DEATHS'])
    Public_health_unit.append(d['PHU_NAME'])
    Resolved_cases.append(d['RESOLVED_CASES'])
    Date.append(d['FILE_DATE'])
  temp_covid = pd.DataFrame(columns=['Date', 'Public_health_unit', 'Active_Cases', 'Resolved_cases', 'Deaths'])
  temp_covid['Active_Cases'] = Active_cases
  temp_covid['Deaths'] = Deaths
  temp_covid['Public_health_unit'] = Public_health_unit
  temp_covid['Resolved_cases'] = Resolved_cases
  temp_covid['Date'] = Date
  covid_data = covid_data.append(temp_covid, ignore_index=True)

lis1 = list(covid_data.columns)
indx = lis1.index('Public_health_unit')
for i in range(len(covid_data)):
  for cols in col:
    var = covid_data.iloc[i, indx].lower().split()[0]
    if var in cols:
      covid_data.iloc[i,indx] = cols

covid_data['Public_health_unit'] = covid_data['Public_health_unit'].str.lower()

covid_data['Public_health_unit'].replace(to_replace = 'city of ottawa', value = 'ottawa public health', inplace=True)
covid_data['Public_health_unit'].replace(to_replace = 'city of hamilton', value = 'hamilton public health services', inplace=True)

covid_cases = pd.merge(covid_data, final_phu, how='left', on='Public_health_unit')

covid_cases['Date'] = covid_cases['Date'].str[:10]
covid_cases = covid_cases.drop(['City'], axis=1)

covid_cases.drop_duplicates(inplace=True)
final_phu = final_phu.drop(['City'], axis=1)
final_phu = final_phu.drop_duplicates(inplace=True)

print(covid_cases.loc[covid_cases['Public_health_unit']=='brant county health unit', 'Website_info'])
def fetch_phu_data(regions):
  regions = regions.lower()
  for cols in col:
    if regions in cols:
      regions = cols
  print('regions is', regions)
  print(covid_cases.loc[covid_cases['Public_health_unit']==regions, 'Website_info'])
  website_inf = covid_cases.loc[covid_cases['Public_health_unit']==regions, 'Website_info'].values[0]
  phu = covid_cases.loc[covid_cases['Public_health_unit']==regions, 'Public_health_unit'].values[0]
  return[(phu,website_inf)]
  
def fetch_cov_cases(regions):
  regions = regions.lower()
  for cols in col:
    if regions in cols:
      regions = cols
  print('regions is: ', regions)
  active = covid_cases.loc[(covid_cases['Public_health_unit'] == regions), 'Active_Cases'].values[0]
  resolved = covid_cases.loc[covid_cases['Public_health_unit']==regions, 'Resolved_cases'].values[0]
  deaths = covid_cases.loc[covid_cases['Public_health_unit']==regions, 'Deaths'].values[0]
  phu = covid_cases.loc[covid_cases['Public_health_unit']==regions, 'Public_health_unit'].values[0]

  return[(phu, active, resolved, deaths)]

